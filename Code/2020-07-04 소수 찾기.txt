import java.util.*;

class Solution {
    public int solution(int n) {
        ArrayList<Boolean> primeList;
        int answer = 0;
        if(n <= 1){
            answer = 1;
            return answer;
        }else{
            primeList = new ArrayList<Boolean>(n+1);
            primeList.add(false);
	    	primeList.add(false);
	    	// 2~ n 까지 소수로 설정
	    	for(int i=2; i<=n; i++ )
	    		primeList.add(i, true);

	    	// 2 부터  ~ i*i <= n
	    	// 각각의 배수들을 지워간다.   
	    	for(int i=2; (i*i)<=n; i++){
	    		if(primeList.get(i)){
	    			for(int j = i*i; j<=n; j+=i) primeList.set(j, false);
	    			//i*i 미만은 이미 처리되었으므로 j의 시작값은 i*i로 최적화할 수 있다.
	    		}
		}
        }
        for(int i=0; i<=n; i++){
			if(primeList.get(i) == true){
				answer++;
			}
        }
        return answer;
    }
}